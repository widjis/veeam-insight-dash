generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model VeeamConfig {
  id                String      @id @default(cuid())
  name              String      @unique
  baseUrl           String
  apiVersion        String      @default("1.1-rev1")
  username          String
  password          String
  verifySSL         Boolean     @default(false)
  isActive          Boolean     @default(true)
  isDefault         Boolean     @default(false)
  description       String?
  tags              String[]
  timeout           Int         @default(30000)
  retryAttempts     Int         @default(3)
  retryDelay        Int         @default(5000)
  monitoringEnabled Boolean     @default(true)
  alertsEnabled     Boolean     @default(true)
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  createdBy         String?
  lastUsed          DateTime?
  alertRules        AlertRule[]
  auditLogs         AuditLog[]

  @@map("veeam_configs")
}

model AlertRule {
  id                 String        @id @default(cuid())
  name               String
  description        String?
  ruleType           AlertType
  severity           AlertSeverity
  isEnabled          Boolean       @default(true)
  conditions         Json
  notifyEmail        Boolean       @default(false)
  notifyWhatsApp     Boolean       @default(false)
  notifyWebhook      Boolean       @default(false)
  emailRecipients    String[]
  whatsappRecipients String[]
  webhookUrl         String?
  webhookHeaders     Json?
  cooldownMinutes    Int           @default(60)
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  createdBy          String?
  veeamConfigId      String?
  veeamConfig        VeeamConfig?  @relation(fields: [veeamConfigId], references: [id])
  alerts             Alert[]

  @@map("alert_rules")
}

model Alert {
  id             String        @id @default(cuid())
  ruleId         String
  title          String
  message        String
  severity       AlertSeverity
  alertType      AlertType
  status         AlertStatus   @default(ACTIVE)
  acknowledgedAt DateTime?
  acknowledgedBy String?
  resolvedAt     DateTime?
  resolvedBy     String?
  metadata       Json?
  emailSent      Boolean       @default(false)
  whatsappSent   Boolean       @default(false)
  webhookSent    Boolean       @default(false)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  alertRule      AlertRule     @relation(fields: [ruleId], references: [id], onDelete: Cascade)

  @@map("alerts")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  username     String    @unique
  firstName    String
  lastName     String
  passwordHash String
  role         String    @default("user")
  isActive     Boolean   @default(true)
  lastLoginAt  DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@map("users")
}

model UserSetting {
  id        String   @id @default(cuid())
  userId    String
  category  String
  key       String
  value     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, category, key])
  @@map("user_settings")
}

model SystemConfig {
  id          String   @id @default(cuid())
  category    String
  key         String
  value       Json
  description String?
  isSecret    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  updatedBy   String?

  @@unique([category, key])
  @@map("system_configs")
}

model WhatsAppConfig {
  id                         Int      @id @default(autoincrement())
  is_active                  Boolean  @default(false)
  api_url                    String
  api_token                  String
  chat_id                    String?
  default_recipients         String?
  enable_image_reports       Boolean  @default(false)
  comprehensive_image_report Boolean  @default(false)
  image_width                Int?     @default(1200)
  image_height               Int?     @default(800)
  image_quality              Int?     @default(80)
  message_template_summary   String?
  message_template_detailed  String?
  created_at                 DateTime @default(now())
  updated_at                 DateTime @default(now())

  @@map("whatsapp_configs")
}

model AuditLog {
  id            String       @id @default(cuid())
  entityType    String
  entityId      String
  action        AuditAction
  oldValues     Json?
  newValues     Json?
  changes       String[]
  userId        String?
  userEmail     String?
  ipAddress     String?
  userAgent     String?
  createdAt     DateTime     @default(now())
  veeamConfigId String?
  veeamConfig   VeeamConfig? @relation(fields: [veeamConfigId], references: [id])

  @@map("audit_logs")
}

enum AlertType {
  JOB_FAILED
  JOB_WARNING
  REPOSITORY_FULL
  REPOSITORY_WARNING
  SERVER_OFFLINE
  BACKUP_OVERDUE
  CUSTOM

  @@map("alert_type")
}

enum AlertSeverity {
  LOW
  MEDIUM
  HIGH
  CRITICAL

  @@map("alert_severity")
}

enum AlertStatus {
  ACTIVE
  ACKNOWLEDGED
  RESOLVED
  SUPPRESSED

  @@map("alert_status")
}

enum AuditAction {
  CREATE
  UPDATE
  DELETE
  LOGIN
  LOGOUT
  CONFIG_CHANGE
  ALERT_ACKNOWLEDGE
  ALERT_RESOLVE

  @@map("audit_action")
}

enum ReportConfigType {
  DAILY
  WEEKLY
  MONTHLY
}

enum WhatsAppReportFormat {
  SUMMARY
  DETAILED
}

enum ReportFormat {
  HTML
  PDF
  CSV
  JSON
}

// Report configuration for automated scheduling
model ReportConfig {
  id              String   @id @default(cuid())
  name            String   // Configuration name (e.g., "Daily Summary", "Weekly Trend")
  type            ReportConfigType // daily, weekly, monthly
  enabled         Boolean  @default(false)
  
  // Schedule settings
  deliveryTime    String   // Time to send (e.g., "09:00")
  timezone        String   @default("UTC")
  
  // Email delivery settings
  emailEnabled    Boolean  @default(false)
  emailRecipients String[] // Array of email addresses
  emailFormat     ReportFormat @default(HTML)
  
  // WhatsApp delivery settings
  whatsappEnabled Boolean  @default(false)
  whatsappRecipients String[] // Array of phone numbers
  whatsappFormat  WhatsAppReportFormat @default(SUMMARY)
  
  // Report content settings
  includeJobs     Boolean  @default(true)
  includeRepositories Boolean @default(true)
  includeAlerts   Boolean  @default(true)
  
  // Metadata
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdBy       String?
  lastRun         DateTime?
  nextRun         DateTime?
  
  @@map("report_configs")
}
