version: '3.8'

services:
  veeam-insight:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: veeam-insight-dashboard
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "3002:3002"
    environment:
      # Application Configuration
      - NODE_ENV=production
      - PORT=3001
      - WS_PORT=3002
      
      # Veeam Configuration
      - VEEAM_SERVER=${VEEAM_SERVER}
      - VEEAM_USERNAME=${VEEAM_USERNAME}
      - VEEAM_PASSWORD=${VEEAM_PASSWORD}
      - VEEAM_PORT=${VEEAM_PORT:-9419}
      
      # Security
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1h}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      
      # Cache Configuration
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - CACHE_TTL=${CACHE_TTL:-300}
      
      # Rate Limiting
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-900000}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - LOGIN_RATE_LIMIT_WINDOW=${LOGIN_RATE_LIMIT_WINDOW:-900000}
      - LOGIN_RATE_LIMIT_MAX=${LOGIN_RATE_LIMIT_MAX:-5}
      
      # Monitoring
      - HEALTH_CHECK_INTERVAL=${HEALTH_CHECK_INTERVAL:-30000}
      - ALERT_CHECK_INTERVAL=${ALERT_CHECK_INTERVAL:-60000}
      
      # WhatsApp Integration (Optional)
      - WHATSAPP_API_URL=${WHATSAPP_API_URL}
      - WHATSAPP_API_TOKEN=${WHATSAPP_API_TOKEN}
      - WHATSAPP_PHONE_NUMBER=${WHATSAPP_PHONE_NUMBER}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FILE=${LOG_FILE:-/app/logs/app.log}
      
      # External Redis (comment out if using internal Redis)
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./logs:/app/logs
      - ./server/tokens.json:/app/tokens.json
    networks:
      - veeam-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis

  nginx:
    image: nginx:alpine
    container_name: veeam-insight-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - veeam-network
    depends_on:
      - veeam-insight
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis service (comment out if using external Redis)
  redis:
    image: redis:7-alpine
    container_name: veeam-insight-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - veeam-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes

volumes:
  redis_data:
    driver: local

networks:
  veeam-network:
    driver: bridge